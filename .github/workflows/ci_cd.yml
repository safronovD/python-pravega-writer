name: Python_CI_CD

on:
  push:
    branches: [ develop ]
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install pylint
        pip install pycodestyle
        pip install -r ./src/connector/requirements.txt
        pip install -r ./src/server/requirements.txt
        pip install -r ./src/ml-controller/requirements.txt
        pip install -r ./src/connector/test/requirements.txt
        pip install -r ./src/server/test/requirements.txt
        pip install -r ./src/ml-controller/test/requirements.txt
      
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics > linting_flake8.txt
        
    - name: Upload flake8 results
      uses: actions/upload-artifact@v2
      with:
        name: linting_flake8
        path: linting_flake8.txt
      
    - name: Lint with PyLint
      run:  pylint --rcfile=pylint.cfg --exit-zero src/ --msg-template="{path}:{line}:[{msg_id}({symbol}), {obj}] {msg}" > linting_pylint.txt
   
    - name: Upload PyLint8 results
      uses: actions/upload-artifact@v2
      with:
        name: linting_pylint
        path: linting_pylint.txt
      
    - name: Lint with PEP8
      run: pycodestyle --max-line-length=100 ./src > linting_pep8.txt | exit 0
      
      
    - name: Upload PEP8 results
      uses: actions/upload-artifact@v2
      with:
        name: linting_pep8
        path: linting_pep8.txt
