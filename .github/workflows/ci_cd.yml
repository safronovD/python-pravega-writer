name: Python linting

on: [ push ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 -r .ci/linter-configs/requirements.txt
#        pip install -r ./src/connector/requirements.txt
#        pip install -r ./src/server/requirements.txt
#        pip install -r ./src/ml-controller/requirements.txt
#        pip install -r ./src/connector/test/requirements.txt
#        pip install -r ./src/server/test/requirements.txt
#        pip install -r ./src/ml-controller/test/requirements.txt
      
    - name: Lint with Flake8
      run: |
        flake8 ./src --config=.ci/linter-configs/flake8.cfg --exit-zero > linting_flake8.txt
        cat linting_flake8.txt

        total_errors="$(tail -1 linting_flake8.txt)"
        threshold=10

        if [[  $total_errors -gt $threshold ]];
        then
            echo "Too many errors"
            exit 1
        fi

    - name: Upload flake8 results
      uses: actions/upload-artifact@v2
      with:
        name: linting_flake8
        path: linting_flake8.txt
      
    - name: Lint with PyLint
      run:  |
        pylint --rcfile=.ci/linter-configs/pylint.cfg --exit-zero src/ --msg-template="{path}:{line}:[{msg_id}({symbol}), {obj}] {msg}" > linting_pylint.txt
        cat linting_pylint.txt
   
    - name: Upload PyLint8 results
      uses: actions/upload-artifact@v2
      with:
        name: linting_pylint
        path: linting_pylint.txt
      
    - name: Lint with PEP8
      run: |
        pycodestyle --max-line-length=127 ./src > linting_pep8.txt | exit 0
        cat linting_pep8.txt
          
    - name: Upload PEP8 results
      uses: actions/upload-artifact@v2
      with:
        name: linting_pep8
        path: linting_pep8.txt

    - name: Trigger jenkins Job
      uses: appleboy/jenkins-action@master
      with:
        url: ${{ secrets.jenkins_url }}
        user: ${{ secrets.jenkins_user }}
        token: ${{ secrets.jenkins_token }}
        job: "/job/Container"

    - name: jenkins
        uses: enflo/jenkins-action@master
        with:
          url: ${{ secrets.jenkins_url }}
          user: ${{ secrets.jenkins_user }}
          token: ${{ secrets.jenkins_token }}
          job: "/job/Container"

